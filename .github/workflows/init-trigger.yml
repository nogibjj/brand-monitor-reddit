name: initial trigger action

on:
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: init-brand-monitor # set this to your application's name, it has to be unique
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'   # set this to the path to your web app project, defaults to the repository root

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub action'
      uses: actions/checkout@v2

    - name: Install with RustUp
      shell: bash
      run: curl https://sh.rustup.rs -sSf | sh -s -- -y
    - name: Install musl
      run: sudo apt-get install -y --no-install-recommends musl-tools

    - name: Add Target
      shell: bash
      run: rustup target add x86_64-unknown-linux-musl

    - name: Build release
      shell: bash
      run: |
       cargo build --release --manifest-path=init_trigger/Cargo.toml --target=x86_64-unknown-linux-musl
       cp init_trigger/target/x86_64-unknown-linux-musl/release/handler .
    - name: Copy handler to parent directory
      shell: bash
      run: cp init_trigger/target/x86_64-unknown-linux-musl/release/handler .

    - name: Install Azure cli
      run: |
        sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
        curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
        AZ_REPO=$(lsb_release -cs)
        echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
        sudo apt-get update
        sudo apt-get install azure-cli

    - name: Azure Login
      uses: azure/login@v1
      with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Run Azure Functions action'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        respect-funcignore: true
